[Rainmeter]
Update=-1

;;Define these variables to make stuff easier to read
;;SliderX's default value should be [MeterSlider:X]
[Variables]
SliderX=#SliderM#
SliderW=100
SliderM=20
SliderH=20

;;This part converts the X value given to percentual value
;;The formula for percentage in range is "((Input-Min)*100/(Max-Min))"
;;#SliderX# - the value returned by the slider, which is the input
;;#SliderM# - the value of the start of the slider, this can also be the X value of the volume bar, this is the minimum value of #SliderX#
;;(#SliderM#+#SliderW#) - the value of the end of the slider, this is the maximum value of #SliderX#
[SliderPercent]
Measure=Calc
Formula=((#SliderX#-(#SliderM#))*100/(((#SliderM#)+#SliderW#)-(#SliderM#)))
OnUpdateAction=
; change the update action to whatever value you want to change, like variables or volume
DynamicVariables=1
UpdateDivider=-1

[MeasureMouse]
Measure=Plugin
Plugin=Mouse
; this measure uses the Plugin:Mouse
LeftMouseDragAction=[!SetVariable SliderX "(Clamp(($MouseX$),(#SliderM#),((#SliderM#)+#SliderW#)))"][!UpdateMeasure SliderPercent][!UpdateMeterGroup Slider][!Redraw]
; actions to be executed when the mouse drags. The first bang gets the mouse value and make sure it's in the slider. The bangs after that updates the required measures and the slider.
LeftMouseUpAction=[!CommandMeasure MeasureMouse "Stop"]
; actions to be executed after the mouse click is lifted. The first bang stops the measure to retrieve information from mouse dragging.
RelativeToSkin=1
RequireDragging=1
DynamicVariables=1

; This is the visual part of the slider. You can also use a bar meter.
; You can change around the X and Y values, make sure to also change #SliderX#
[MeterSlider]
Meter=Shape
X=#SliderM#
Y=0
Shape=Rectangle 0,0,#SliderW#,#SliderH# | Fill Color 40,40,40 | StrokeWidth 0
; This is the background of the slider. You change any values after #SliderW# if you want.
Shape2=Rectangle 0,0,(#SliderX#-#SliderM#),#SliderH# | Fill Color 255,255,255 | StrokeWidth 0
; This is the fill of the slider. You change any values after #SliderX# if you want.
DynamicVariables=1
Group=Slider

[SliderHitbox]
Meter=Shape
X=r
Y=-5r
; To make it easier to click, the hitbox would be 5 pixels up and 10 pixels taller
Shape=Rectangle 0,0,#SliderW#,(#SliderH#+10) | Fill Color 0,0,0,1 | StrokeWidth 0
LeftMouseDownAction=[!CommandMeasure MeasureMouse "Start"]
; Start retrieving information from mouse dragging
Group=Slider